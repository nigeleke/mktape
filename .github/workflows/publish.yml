# Run publish-cycle on main commits.
#
# Publish cycle comprises:
# - publish site, coverage reports and API documentation to https://nigeleke.github.io
#
name: Publish Cycle

on:
  workflow_run:
    workflows: ["Acceptance Cycle"]
    branches: [develop]
    types:
      - completed

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Prep
        run: |
          sudo apt update
          sudo apt install curl

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build
        run: |
          cd data
          curl -LO https://www.tuhs.org/Archive/Distributions/Research/Keith_Bostic_v7/f0.gz
          curl -LO https://www.tuhs.org/Archive/Distributions/Research/Keith_Bostic_v7/f1.gz
          curl -LO https://www.tuhs.org/Archive/Distributions/Research/Keith_Bostic_v7/f2.gz
          curl -LO https://www.tuhs.org/Archive/Distributions/Research/Keith_Bostic_v7/f3.gz
          curl -LO https://www.tuhs.org/Archive/Distributions/Research/Keith_Bostic_v7/f4.gz
          curl -LO https://www.tuhs.org/Archive/Distributions/Research/Keith_Bostic_v7/f5.gz
          curl -LO https://www.tuhs.org/Archive/Distributions/Research/Keith_Bostic_v7/f6.gz
          gunzip f*.gz
          cd ..
          cargo doc --no-deps
          cargo install cargo-tarpaulin
          cargo tarpaulin --out html --output-dir target/coverage --exclude-files=src/main.rs -- --test-threads=1
          mkdir docs0
          mkdir -p docs0/api
          mkdir -p docs0/coverage
          cp README.md docs0/
          cp -R target/doc/* docs0/api
          cp -R target/coverage/tarpaulin-report.html docs0/coverage/index.html
          cargo tarpaulin --out xml --exclude-files=src/main.rs -- --test-threads=1

      - name: Publish to Codecov
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Publish
        run: |
          git config --global user.email "nigeleke@users.noreply.github.com"
          git config --global user.name "Nigel Eke"
          export VERSION=$(git describe --abbrev=0 --tags)
          git checkout gh-pages
          rm -rf docs
          mv docs0 docs
          git add .
          git commit -m "Release $VERSION"
          git push
