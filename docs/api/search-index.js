var searchIndex = JSON.parse('{\
"mktape":{"doc":"<code>mktape</code> stems from the need to create a PDP-10 <code>tap</code> file to …","t":"AAFNNENNNNNGLLLLLLLLLLLL","n":["mktape","result","mktape","EnvVar","Err","Error","InvalidArgsCount","InvalidInputSpec","InvalidTapeFilename","Io","Ok","Result","borrow","borrow_mut","eq","fmt","from","from","from","from","into","try_from","try_into","type_id"],"q":[[0,"mktape"],[2,"mktape::mktape"],[3,"mktape::result"],[24,"alloc::string"],[25,"core::fmt"],[26,"core::fmt"],[27,"std::env"],[28,"std::io::error"],[29,"core::result"],[30,"core::any"]],"d":["","","<code>mktape</code> provides the core functionality. See main for <code>args</code> …","","Contains the error value","","","","","","Contains the success value","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","",""],"i":[0,0,0,5,4,0,5,5,5,5,4,0,5,5,5,5,5,5,5,5,5,5,5,5],"f":[0,0,[[[2,[1]]],[[4,[3]]]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[5,5],6],[[5,7],8],[-1,-1,[]],[9,5],[10,5],[11,5],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]]],"c":[],"p":[[3,"String",24],[15,"slice"],[15,"tuple"],[6,"Result",3],[4,"Error",3],[15,"bool"],[3,"Formatter",25],[6,"Result",25],[3,"ParseIntError",26],[4,"VarError",27],[3,"Error",28],[4,"Result",29],[3,"TypeId",30]],"b":[[17,"impl-From%3CParseIntError%3E-for-Error"],[18,"impl-From%3CVarError%3E-for-Error"],[19,"impl-From%3CError%3E-for-Error"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
